﻿*Используемые Привет Хело
Grab 
urllib2 
os.path 
os 
urlparse 
BeautifulSoup
urlsplit
мы создаем список, в котором буду храниться использованные ссылки, чтобы по сто раз их не качать
вызываем функцию, которая принимает ссылку и список использованных ссылок изначально он пустой:
--------------------------------------------
что делает эта функция:
  Создаём объект Grab.
  Задаем значение переменной url.
  Делаем приличный вид, чтобы воспользоваться BeautifulSoup
  Ищем все теги "a", информацию сохраняем в список. этот тег служит для создания ссылок, т.е. мы ищем ссылки 
  Проходимся циклом for по элементам списка, который содержит ссылки:
  Из списка, содержащего ссылки, с помощью аттрибута href выделяем ссылки.
  С помощью библиотеки urlsplit разделяем ссылки на части и проверяем относительные они или нет если нет:
    Преобразуем относительные пути в абсолютные
  дальше переходим по ссылке.
  Если в тексте страницы имеется заданное слово
    Запрос к функции Creating_a_saved_pages, она будет сохранять найденные картинки и странички
  Запрашиваем функцию Check_to_repeat, она у нас проверяет список использованных ссылок,
    если этих ссылок нет в использованных списках, то мы 
    вызываем фунцию, которая снова будет пробегаться по ссылкам 
    и добавляем ссылку в список использованных ссылок, чтобы к ним не возвращаться
Creating_a_saved_pages   is.alpha Этот метод возвращает истину, если все символы в строке являются алфавитными и есть по крайней мере один символ, иначе ложь.
(мы получаем на входе адрес страницы, копируем содержимое в отдельную папку и сохраняем сам html.)
создаем переменную "имя" 
создамем цикл фор, в котором пробегаемся по url, если имеется что-то кроме букв, то мы не добавляем это в переменную "имя"
потом мы распределяем по названиям и используем срезы, чтобы название папки было красивым
дальше выделяем ссылку, делаем приличный вид
Ищем теги "img", получаем код, содержащим наши ссылки.
Ищем теги "script",  получаем код, содержащим наши ссылки.
Ищем теги "link",  получаем код, содержащим наши ссылки.
Создаем каталог, названный $name$.
используем модуль os чтоб работать с операционной системой 
создаем папку название папки будет с именем переменной name
преходим в эту папку
Сохраняем страницу.html,  ее имя будет таким, какое находиться в переменной 'name'
дальше записываем в эту страничку(файл) содержимое нашей рабочей ссылки
закрываем файл
Если списки с нужными объектами(img, js, link) не пусты, идём дальше.
Создаём объект Grab.
Циклом пробегаемся по элементам списка, содержащего фрагменты кода со ссылками на картинки:
  вычленяем нужно используя img
  Сплитим
  Сохраняем в images.
Циклом пробегаемся по элементам списка, содержащего фрагменты кода со ссылками на js-файлы.
  вычленяем нужно используя js
  Сплитим
  Сохраняем в  js.
Циклом пробегаемся по элементам списка, содержащего фрагменты кода со ссылками на link-файлы.
  вычленяем нужно используя link
  Сплитим
  Сохраняем в  link.
Переходим на уровень выше, чтобы небыло тупого ветвления 
Если же списки пусты, сообщаем о том, что наша ссылка не содержит объектов для сохранения
